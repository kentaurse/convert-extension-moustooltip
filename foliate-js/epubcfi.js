const findIndices=(e,t)=>e.map(((e,n,o)=>t(e,n,o)?n:null)).filter((e=>null!=e)),splitAt=(e,t)=>[-1,...t,e.length].reduce((({xs:t,a:n},o)=>({xs:t?.concat([e.slice(n+1,o)])??[],a:o})),{}).xs,concatArrays=(e,t)=>e.slice(0,-1).concat([e[e.length-1].concat(t[0])]).concat(t.slice(1)),isNumber=/\d/;export const isCFI=/^epubcfi\((.*)\)$/;const escapeCFI=e=>e.replace(/[\^[\](),;=]/g,"^$&"),wrap=e=>isCFI.test(e)?e:`epubcfi(${e})`,unwrap=e=>e.match(isCFI)?.[1]??e,lift=e=>(...t)=>`epubcfi(${e(...t.map((e=>e.match(isCFI)?.[1]??e)))})`;export const joinIndir=lift(((...e)=>e.join("!")));const tokenizer=e=>{const t=[];let n,o,r="";const s=e=>(t.push(e),n=null,r=""),i=e=>(r+=e,o=!1);for(const t of Array.from(e.trim()).concat(""))if("^"!==t||o){if("!"===n)s(["!"]);else if(","===n)s([","]);else if("/"===n||":"===n){if(isNumber.test(t)){i(t);continue}s([n,parseInt(r)])}else if("~"===n){if(isNumber.test(t)||"."===t){i(t);continue}s(["~",parseFloat(r)])}else if("@"===n){if(":"===t){s(["@",parseFloat(r)]),n="@";continue}if(isNumber.test(t)||"."===t){i(t);continue}s(["@",parseFloat(r)])}else{if("["===n){";"!==t||o?","!==t||o?"]"!==t||o?i(t):s(["[",r]):(s(["[",r]),n="["):(s(["[",r]),n=";");continue}if(n?.startsWith(";")){"="!==t||o?";"!==t||o?"]"!==t||o?i(t):s([n,r]):(s([n,r]),n=";"):(n=`;${r}`,r="");continue}}"/"!==t&&":"!==t&&"~"!==t&&"@"!==t&&"["!==t&&"!"!==t&&","!==t||(n=t)}else o=!0;return t},findTokens=(e,t)=>{return n=([e])=>e===t,e.map(((e,t,o)=>n(e)?t:null)).filter((e=>null!=e));var n},parser=e=>{const t=[];let n;for(const[o,r]of e){if("/"===o)t.push({index:r});else{const e=t[t.length-1];if(":"===o)e.offset=r;else if("~"===o)e.temporal=r;else if("@"===o)e.spatial=(e.spatial??[]).concat(r);else if(";s"===o)e.side=r;else if("["===o){if("/"!==n||!r){e.text=(e.text??[]).concat(r);continue}e.id=r}}n=o}return t},parserIndir=e=>splitAt(e,findTokens(e,"!")).map(parser);export const parse=e=>{const t=tokenizer((n=e,n.match(isCFI)?.[1]??n));var n;const o=findTokens(t,",");if(!o.length)return parserIndir(t);const[r,s,i]=splitAt(t,o).map(parserIndir);return{parent:r,start:s,end:i}};const partToString=({index:e,id:t,offset:n,temporal:o,spatial:r,text:s,side:i})=>{const a=i?`;s=${i}`:"";return`/${e}`+(t?`[${escapeCFI(t)}${a}]`:"")+(null!=n&&e%2?`:${n}`:"")+(o?`~${o}`:"")+(r?`@${r.join(":")}`:"")+(s||!t&&i?"["+(s?.map(escapeCFI)?.join(",")??"")+a+"]":"")},toInnerString=e=>e.parent?[e.parent,e.start,e.end].map(toInnerString).join(","):e.map((e=>e.map(partToString).join(""))).join("!"),toString=e=>{return t=toInnerString(e),isCFI.test(t)?t:`epubcfi(${t})`;var t};export const collapse=(e,t)=>{return"string"==typeof e?toString(collapse(parse(e),t)):e.parent?(n=e.parent,o=e[t?"end":"start"],n.slice(0,-1).concat([n[n.length-1].concat(o[0])]).concat(o.slice(1))):e;var n,o};const buildRange=(e,t)=>{"string"==typeof e&&(e=parse(e)),"string"==typeof t&&(t=parse(t)),e=collapse(e),t=collapse(t,!0);const n=e[e.length-1],o=t[t.length-1],r=[],s=[],i=[];let a=!0;const f=Math.max(n.length,o.length);for(let e=0;e<f;e++){const t=n[e],f=o[e];a&&=t?.index===f?.index&&!t?.offset&&!f?.offset,a?r.push(t):(t&&s.push(t),f&&i.push(f))}const l=e.slice(0,-1).concat([r]);return toString({parent:l,start:[s],end:[i]})};export const compare=(e,t)=>{if("string"==typeof e&&(e=parse(e)),"string"==typeof t&&(t=parse(t)),e.start||t.start)return compare(collapse(e),collapse(t))||compare(collapse(e,!0),collapse(t,!0));for(let n=0;n<Math.max(e.length,t.length);n++){const o=e[n],r=t[n],s=Math.max(o.length,r.length)-1;for(let e=0;e<=s;e++){const t=o[e],n=r[e];if(!t)return-1;if(!n)return 1;if(t.index>n.index)return 1;if(t.index<n.index)return-1;if(e===s){if(t.offset>n.offset)return 1;if(t.offset<n.offset)return-1}}}return 0};const isTextNode=({nodeType:e})=>3===e||4===e,isElementNode=({nodeType:e})=>1===e,indexChildNodes=e=>{const t=Array.from(e.childNodes).filter((e=>isTextNode(e)||isElementNode(e))).reduce(((e,t)=>{let n=e[e.length-1];return n?isTextNode(t)?Array.isArray(n)?n.push(t):isTextNode(n)?e[e.length-1]=[n,t]:e.push(t):isElementNode(n)?e.push(null,t):e.push(t):e.push(t),e}),[]);return isElementNode(t[0])&&t.unshift("first"),isElementNode(t[t.length-1])&&t.push("last"),t.unshift("before"),t.push("after"),t},getNodeByIndex=(e,t)=>e?indexChildNodes(e)[t]:null,partsToNode=(e,t)=>{const{id:n}=t[t.length-1];if(n){const t=e.ownerDocument.getElementById(n);if(t)return{node:t,offset:0}}for(const{index:n}of t){const t=getNodeByIndex(e,n);if("first"===t)return{node:e.firstChild??e};if("last"===t)return{node:e.lastChild??e};if("before"===t)return{node:e,before:!0};if("after"===t)return{node:e,after:!0};e=t}const{offset:o}=t[t.length-1];if(!Array.isArray(e))return{node:e,offset:o};let r=0;for(const t of e){const{length:e}=t.nodeValue;if(r+e>=o)return{node:t,offset:o-r};r+=e}},nodeToParts=(e,t)=>{const{parentNode:n,id:o}=e,r=indexChildNodes(n),s=r.findIndex((t=>Array.isArray(t)?t.some((t=>t===e)):t===e)),i=r[s];if(Array.isArray(i)){let n=0;for(const o of i){if(o===e){n+=t;break}n+=o.nodeValue.length}t=n}const a={id:o,index:s,offset:t};return n!==e.ownerDocument.documentElement?nodeToParts(n).concat(a):[a]};export const fromRange=e=>{const{startContainer:t,startOffset:n,endContainer:o,endOffset:r}=e,s=nodeToParts(t,n);if(e.collapsed)return toString([s]);const i=nodeToParts(o,r);return buildRange([s],[i])};export const toRange=(e,t)=>{const n=collapse(t),o=collapse(t,!0),r=e.documentElement,s=partsToNode(r,n[0]),i=partsToNode(r,o[0]),a=e.createRange();return s.before?a.setStartBefore(s.node):s.after?a.setStartAfter(s.node):a.setStart(s.node,s.offset),i.before?a.setEndBefore(i.node):i.after?a.setEndAfter(i.node):a.setEnd(i.node,i.offset),a};export const fromElements=e=>{const t=[],{parentNode:n}=e[0],o=nodeToParts(n);for(const[r,s]of indexChildNodes(n).entries()){const n=e[t.length];s===n&&t.push(toString([o.concat({id:n.id,index:r})]))}return t};export const toElement=(e,t)=>partsToNode(e.documentElement,collapse(t)).node;export const fake={fromIndex:e=>"/6/"+2*(e+1),toIndex:e=>e?.at(-1).index/2-1};export const fromCalibrePos=e=>{const[t]=parse(e),n=t.shift();return t.shift(),toString([[{index:6},n],t])};export const fromCalibreHighlight=({spine_index:e,start_cfi:t,end_cfi:n})=>{const o=fake.fromIndex(e)+"!";return buildRange(o+t.slice(2),o+n.slice(2))};