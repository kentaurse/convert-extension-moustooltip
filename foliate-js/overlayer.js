const createSVGElement=t=>document.createElementNS("http://www.w3.org/2000/svg",t);export class Overlayer{#t=createSVGElement("svg");#e=new Map;constructor(){Object.assign(this.#t.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",pointerEvents:"none"})}get element(){return this.#t}add(t,e,r,i){this.#e.has(t)&&this.remove(t),"function"==typeof e&&(e=e(this.#t.getRootNode()));const s=e.getClientRects(),o=r(s,i);this.#t.append(o),this.#e.set(t,{range:e,draw:r,options:i,element:o,rects:s})}remove(t){this.#e.has(t)&&(this.#t.removeChild(this.#e.get(t).element),this.#e.delete(t))}redraw(){for(const t of this.#e.values()){const{range:e,draw:r,options:i,element:s}=t;this.#t.removeChild(s);const o=e.getClientRects(),n=r(o,i);this.#t.append(n),t.element=n,t.rects=o}}hitTest({x:t,y:e}){const r=Array.from(this.#e.entries());for(let i=r.length-1;i>=0;i--){const[s,o]=r[i];for(const{left:r,top:i,right:n,bottom:h}of o.rects)if(i<=e&&r<=t&&h>e&&n>t)return[s,o.range]}return[]}static underline(t,e={}){const{color:r="red",width:i=2,writingMode:s}=e,o=createSVGElement("g");if(o.setAttribute("fill",r),"vertical-rl"===s||"vertical-lr"===s)for(const{right:e,top:r,height:s}of t){const t=createSVGElement("rect");t.setAttribute("x",e-i),t.setAttribute("y",r),t.setAttribute("height",s),t.setAttribute("width",i),o.append(t)}else for(const{left:e,bottom:r,width:s}of t){const t=createSVGElement("rect");t.setAttribute("x",e),t.setAttribute("y",r-i),t.setAttribute("height",i),t.setAttribute("width",s),o.append(t)}return o}static strikethrough(t,e={}){const{color:r="red",width:i=2,writingMode:s}=e,o=createSVGElement("g");if(o.setAttribute("fill",r),"vertical-rl"===s||"vertical-lr"===s)for(const{right:e,left:r,top:s,height:n}of t){const t=createSVGElement("rect");t.setAttribute("x",(e+r)/2),t.setAttribute("y",s),t.setAttribute("height",n),t.setAttribute("width",i),o.append(t)}else for(const{left:e,top:r,bottom:s,width:n}of t){const t=createSVGElement("rect");t.setAttribute("x",e),t.setAttribute("y",(r+s)/2),t.setAttribute("height",i),t.setAttribute("width",n),o.append(t)}return o}static squiggly(t,e={}){const{color:r="red",width:i=2,writingMode:s}=e,o=createSVGElement("g");o.setAttribute("fill","none"),o.setAttribute("stroke",r),o.setAttribute("stroke-width",i);const n=1.5*i;if("vertical-rl"===s||"vertical-lr"===s)for(const{right:e,top:r,height:i}of t){const t=createSVGElement("path"),s=Math.round(i/n/1.5),h=i/s,c=Array.from({length:s},((t,e)=>`l${e%2?-n:n} ${h}`)).join("");t.setAttribute("d",`M${e} ${r}${c}`),o.append(t)}else for(const{left:e,bottom:r,width:i}of t){const t=createSVGElement("path"),s=Math.round(i/n/1.5),h=i/s,c=Array.from({length:s},((t,e)=>`l${h} ${e%2?n:-n}`)).join("");t.setAttribute("d",`M${e} ${r}${c}`),o.append(t)}return o}static highlight(t,e={}){const{color:r="red"}=e,i=createSVGElement("g");i.setAttribute("fill",r),i.setAttribute("fill-opacity",.3);for(const{left:e,top:r,height:s,width:o}of t){const t=createSVGElement("rect");t.setAttribute("x",e),t.setAttribute("y",r),t.setAttribute("height",s),t.setAttribute("width",o),i.append(t)}return i}static outline(t,e={}){const{color:r="red",width:i=3,radius:s=3}=e,o=createSVGElement("g");o.setAttribute("fill","none"),o.setAttribute("stroke",r),o.setAttribute("stroke-width",i);for(const{left:e,top:r,height:i,width:n}of t){const t=createSVGElement("rect");t.setAttribute("x",e),t.setAttribute("y",r),t.setAttribute("height",i),t.setAttribute("width",n),t.setAttribute("rx",s),o.append(t)}return o}static copyImage([t],e={}){const{src:r}=e,i=createSVGElement("image"),{left:s,top:o,height:n,width:h}=t;return i.setAttribute("href",r),i.setAttribute("x",s),i.setAttribute("y",o),i.setAttribute("height",n),i.setAttribute("width",h),i}}